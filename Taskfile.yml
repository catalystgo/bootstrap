version: '3'

vars:
  GOBIN: $(pwd)/bin

tasks:
     
  mock:
    cmds:
      - "{{.GOBIN}}/mockgen -package=mock -destination=kafka/mock/sync.go -source=kafka/sync.go"
      - "{{.GOBIN}}/mockgen -package=mock -destination=kafka/mock/async.go -source=kafka/async.go"
      - "{{.GOBIN}}/mockgen -package=mock -destination=kafka/mock/consumer_group.go -source=kafka/consumer_group.go"

  format:
    cmds:
      - task: go_files
        vars: { COMMAND: 'gofmt -w  {} +'}
      - task: go_files
        vars: { COMMAND: '{{.GOBIN}}/goimports -w  {} +'}

  test:
    cmds:
      - go test -v -race -cover ./...

  lint:
    cmds:
      - "{{.GOBIN}}/revive
        -config revive.toml
        -formatter friendly
        -exclude ./**/mock
        ./..."

  precommit:
    desc: "Run all precommit checks"
    cmds:
      - task: format
      - task: lint
      - task: test

  deps:
    - GOBIN={{.GOBIN}} go install golang.org/x/tools/cmd/goimports@v0.19.0
    - GOBIN={{.GOBIN}} go install github.com/mgechev/revive@v1.3.7
    - GOBIN={{.GOBIN}} go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@v2.5.0
    - GOBIN={{.GOBIN}} go install github.com/golang/mock/mockgen@v1.6.0

## Docker 

  docker-up:
    cmds:
      - docker compose -f docker/docker-compose.yml up
  docker-down:
    cmds:
      - docker compose -f docker/docker-compose.yml down

## Internal

  go_files:
    desc: "Return all .go files and run .COMMAND on them"
    internal: true
    cmds:
     - find .
        -name "*.go"
        -not -path ./mock
        -exec {{.COMMAND}};
